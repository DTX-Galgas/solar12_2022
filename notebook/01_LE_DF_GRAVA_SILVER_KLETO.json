{
	"name": "01_LE_DF_GRAVA_SILVER_KLETO",
	"properties": {
		"folder": {
			"name": "Kleto"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Sparkpool02",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "112g",
			"driverCores": 16,
			"executorMemory": "112g",
			"executorCores": 16,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "4",
				"spark.autotune.trackingId": "4b66420d-2e93-4d3e-8c4e-d5b9b03cf7ae"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"d21645d6-b4fb-48cc-86b6-8e2a3609d68b": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "1",
										"1": "Informática"
									},
									{
										"0": "2",
										"1": "TV´s"
									},
									{
										"0": "3",
										"1": "Celulares"
									},
									{
										"0": "4",
										"1": "Eletrodomesticos"
									},
									{
										"0": "5",
										"1": "Utilidades do Lar"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "ID_CATEGORIA",
										"type": "int"
									},
									{
										"key": "1",
										"name": "NOME_CATEGORIA",
										"type": "string"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b10014a9-607b-44d2-be67-37f7422eb8f0/resourceGroups/rg-trn-solar-002/providers/Microsoft.Synapse/workspaces/synapse-solar-ws/bigDataPools/Sparkpool02",
				"name": "Sparkpool02",
				"type": "Spark",
				"endpoint": "https://synapse-solar-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Sparkpool02",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 16,
				"memory": 112,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### **Ler DF Categoria**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://treinamento@adlstrnsolar.dfs.core.windows.net/bronze/CATEGORIA/CATEGORIA_00000.parquet', format='parquet')\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**GRAVAR PARQUET SILVER**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df.write.mode('overwrite').parquet(\"/silver/CATEGORIA\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### **Limpar Cache**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#LIMPAR CACHE\r\n",
					"df.unpersist()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"### **Ler todas as tabelas**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"dfcidade = spark.read.load('abfss://treinamento@adlstrnsolar.dfs.core.windows.net/bronze/CIDADE/*.parquet', format='parquet')\r\n",
					"dfcliente = spark.read.load('abfss://treinamento@adlstrnsolar.dfs.core.windows.net/bronze/CLIENTE/*.parquet', format='parquet')\r\n",
					"dfprodutos = spark.read.load('abfss://treinamento@adlstrnsolar.dfs.core.windows.net/bronze/PRODUTOS/*.parquet', format='parquet')\r\n",
					"dfunidade = spark.read.load('abfss://treinamento@adlstrnsolar.dfs.core.windows.net/bronze/UNIDADE/*.parquet', format='parquet')\r\n",
					"dfvendedores = spark.read.load('abfss://treinamento@adlstrnsolar.dfs.core.windows.net/bronze/VENDEDORES/*.parquet', format='parquet')\r\n",
					"dfvendas = spark.read.load('abfss://treinamento@adlstrnsolar.dfs.core.windows.net/bronze/VENDAS/*.parquet', format='parquet')\r\n",
					"dfvendasitens = spark.read.load('abfss://treinamento@adlstrnsolar.dfs.core.windows.net/bronze/VENDAS_ITENS/*.parquet', format='parquet')\r\n",
					""
				],
				"execution_count": 9
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**Gravar Parquet na Silver**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"dfcidade.write.mode('overwrite').parquet(\"/silver/CIDADE\")\r\n",
					"dfcliente.write.mode('overwrite').parquet(\"/silver/CLIENTES\")\r\n",
					"dfprodutos.write.mode('overwrite').parquet(\"/silver/PRODUTOS\")\r\n",
					"dfunidade.write.mode('overwrite').parquet(\"/silver/UNIDADE\")\r\n",
					"dfvendedores.write.mode('overwrite').parquet(\"/silver/VENDEDORES\")\r\n",
					"dfvendas.write.mode('overwrite').parquet(\"/silver/VENDAS\")\r\n",
					"dfvendasitens.write.mode('overwrite').parquet(\"/silver/VENDAS_ITENS\")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**Limpa Cache**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#LIMPAR CACHE\r\n",
					"dfcidade.unpersist()\r\n",
					"dfcliente.unpersist()\r\n",
					"dfprodutos.unpersist()\r\n",
					"dfunidade.unpersist()\r\n",
					"dfvendas.unpersist()\r\n",
					"dfvendasitens.unpersist()\r\n",
					"dfvendedores.unpersist()\r\n",
					"df"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			}
		]
	}
}